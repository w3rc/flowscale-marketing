{
    "10": {
        "inputs": {
            "seed": 140004100054213,
            "steps": 20,
            "cfg": 1,
            "sampler_name": "euler",
            "scheduler": "normal",
            "denoise": 1,
            "model": [
                "11",
                0
            ],
            "positive": [
                "28",
                0
            ],
            "negative": [
                "14",
                0
            ],
            "latent_image": [
                "29",
                0
            ]
        },
        "class_type": "KSampler"
    },
    "11": {
        "inputs": {
            "ckpt_name": "FLUX1/flux1-dev-fp8.safetensors"
        },
        "class_type": "CheckpointLoaderSimple"
    },
    "13": {
        "inputs": {
            "text": [
                "34",
                0
            ],
            "clip": [
                "11",
                1
            ]
        },
        "class_type": "CLIPTextEncode"
    },
    "14": {
        "inputs": {
            "text": "text, watermark, nsfw",
            "clip": [
                "11",
                1
            ]
        },
        "class_type": "CLIPTextEncode"
    },
    "15": {
        "inputs": {
            "samples": [
                "10",
                0
            ],
            "vae": [
                "11",
                2
            ]
        },
        "class_type": "VAEDecode"
    },
    "16": {
        "inputs": {
            "filename_prefix": "ComfyUI",
            "images": [
                "15",
                0
            ]
        },
        "class_type": "SaveImage"
    },
    "22": {
        "inputs": {
            "text": [
                "34",
                0
            ],
            "text2": "virtual chat room, futuristic, diverse avatars, dynamic discussions, animated expressions, technology, innovation, self-driving cars, professional networking, seamless integration, digital communication, vibrant discussions, curiosity, exploration, harmonious blend, symphony of communication, endless possibilities"
        },
        "class_type": "ShowText|pysssss"
    },
    "28": {
        "inputs": {
            "guidance": 3.5,
            "conditioning": [
                "13",
                0
            ]
        },
        "class_type": "FluxGuidance"
    },
    "29": {
        "inputs": {
            "width": 1280,
            "height": 720,
            "batch_size": 1
        },
        "class_type": "EmptySD3LatentImage"
    },
    "33": {
        "inputs": {
            "model": "gpt-3.5-turbo",
            "system_prompt": "Analyze this blog article and create a visual scene blueprint:\n\n1. **Key Elements**:\n   - 3 primary visual metaphors from text\n   - Dominant color palette (HEX codes)\n   - Lighting style (e.g., volumetric, chiaroscuro)\n   - Focal point composition\n\n2. **Style Guidelines**:\n   - {brand_voice}-appropriate aesthetics\n   - Cultural references from chat history\n   - Recurring symbolic elements\n\n3. **Output Format**:\n   \"A [medium] depicting [main subject] [action], [environment details]. \n   Style: [art style] with [lighting type] lighting. \n   Color scheme: [primary]-[secondary]-[accent]. \n   Symbolic elements: [element1], [element2]\"\n\nExample: \n\"A digital painting depicting a knight assembling puzzle pieces in a foggy library. \nStyle: Corporate surrealism with soft volumetric lighting. \nColor scheme: #2A5CAA-#F0F4F8-#FFD700. \nSymbolic elements: Broken chains, growing sapling\"",
            "prompt": [
                "35",
                0
            ],
            "response_format": "text",
            "temperature": 0.5,
            "top_p": 1,
            "max_completion_tokens": 600,
            "presence_penalty": 0.2,
            "frequency_penalty": 0
        },
        "class_type": "openai"
    },
    "34": {
        "inputs": {
            "model": "gpt-3.5-turbo",
            "system_prompt": "[Subject Description], [Action/State], [Environment Details], \nArt Style: [style1], [style2], [style3], \nTechnical: [camera angle], [lens type], [lighting], \nColor Palette: [primary], [secondary], [accent], \nModifiers: intricate details, 8k resolution, professional composition, \nArtists: [artist1], [artist2], [artist3], \nNegative Prompt: low quality, cartoonish, text, watermark, blurry\n\nExample:\n\"Middle-aged executive building neural network models in futuristic office, \nArt Style: corporate realism, cyberpunk elements, detailed linework, \nTechnical: low angle view, 85mm lens, volumetric lighting with godrays, \nColor Palette: #2A5CAA (primary), #F0F4F8 (secondary), #FFD700 (accent), \nModifiers: hyper-detailed circuitry, holographic displays, subtle lens flare, \nArtists: Syd Mead, Beeple, Ian McQue,\nNegative Prompt: anime style, childish elements, low contrast, JPEG artifacts\"",
            "prompt": [
                "33",
                0
            ],
            "response_format": "text",
            "temperature": 0.9,
            "top_p": 1,
            "max_completion_tokens": 100,
            "presence_penalty": 0.1,
            "frequency_penalty": 0
        },
        "class_type": "openai"
    },
    "35": {
        "inputs": {
            "model": "gpt-3.5-turbo",
            "system_prompt": "Create a comprehensive blog article that synthesizes key elements from the conversation history. Follow these guidelines:\n\n1. **Structure**:\n   - Opening hook: Start with surprising statistic/question/metaphor\n   - 3 key sections with subheadings\n   - Actionable conclusion\n\n2. **Style**:\n   - Maintain {brand_voice} tone\n   - Use vivid sensory language\n   - Include 2-3 metaphors/analogies\n   - Apply \"show don't tell\" principle\n\n3. **Content Requirements**:\n   - Highlight recurring themes from last 3 conversations\n   - Preserve technical terms used in chat history\n   - Include implied emotional subtext\n   - Reference 1-2 historical parallels if relevant\n\nAvoid direct quotes. Keep paragraphs under 4 sentences. Target audience: LinkedIn professionals.",
            "prompt": [
                "36",
                0
            ],
            "response_format": "text",
            "temperature": 0.7000000000000001,
            "top_p": 1,
            "max_completion_tokens": 700,
            "presence_penalty": 0.3,
            "frequency_penalty": 0
        },
        "class_type": "openai"
    },
    "36": {
        "inputs": {
            "search_query": "Generate a post cover",
            "astradb_token": "",
            "astradb_endpoint": "https://5afd1aea-8e4c-40c9-8e38-5100c6d8c2dd-us-east-2.apps.astra.datastax.com",
            "collection_name": "chat_history",
            "conversation_id": "2e58d623-2c2e-4e0c-9f39-cc8b816642bc"
        },
        "class_type": "astradb_search"
    },
    "37": {
        "inputs": {
            "action": "append",
            "tidy_tags": "yes",
            "text_a": "This is the chat history of the current conversation. \\n\\n\n\\nChat History: \\n",
            "text_b": [
                "36",
                0
            ],
            "text_c": "\\n\\n\\n.\nUsing this chat History, answer the user's prompt, \\n\n\n\\nUser's Prompt: \n"
        },
        "class_type": "StringFunction|pysssss"
    }
}